# -*- coding: utf-8 -*-
from string import ascii_uppercase, digits

symbol_versions = [(n+1) for n in range(40)]
side_lengths = range(21, 181, 4)

symbol_sizes = dict(zip(symbol_versions, side_lengths))
"""ISO/IEC 18004 - Table 1 (partial)

21x21 modules to 177x177 modules (Versions 1 to 40, increasing in steps of 4
modules per side)."""

#: ISO/IEC 18004 - Table 3
num_of_bits_character_count_indicator = {}
for version in symbol_versions:
    num_of_bits_character_count_indicator[version] = {}
    if 1 <= version <= 9:
        num_of_bits_character_count_indicator[version]['numeric'] = 10
        num_of_bits_character_count_indicator[version]['alphanumeric'] = 9
        num_of_bits_character_count_indicator[version]['8bit'] = 8
        num_of_bits_character_count_indicator[version]['kanji'] = 8
    elif 10 <= version <= 26:
        num_of_bits_character_count_indicator[version]['numeric'] = 12
        num_of_bits_character_count_indicator[version]['alphanumeric'] = 11
        num_of_bits_character_count_indicator[version]['8bit'] = 16
        num_of_bits_character_count_indicator[version]['kanji'] = 10
    elif 27 <= version <= 40:
        num_of_bits_character_count_indicator[version]['numeric'] = 14
        num_of_bits_character_count_indicator[version]['alphanumeric'] = 13
        num_of_bits_character_count_indicator[version]['8bit'] = 16
        num_of_bits_character_count_indicator[version]['kanji'] = 12

#: ISO/IEC 18004 - Table 2
mode_indicators = {
        'ECI': '0111',
        'numeric': '0001',
        'alphanumeric': '0010',
        '8bit': '0100',
        'kanji': '1000',
        'structured_append': '0011',
        'fnc1': ['0101', '1001'],
        }

#: ISO/IEC 18004 - Table 5
alphanumeric_char_values = dict([(x[1], x[0]) for x in
    enumerate("".join([digits, ascii_uppercase, ' $%*+-./:']))])

#: ISO/IEC 18004 - Table 1 (partial) and Table 7 (partial)
symbol_version_data = {
        1:  {
            'data_capacity': 26,
            'data_codewords': {'L': 19, 'M': 16, 'Q': 13, 'H': 9},
            'remainder_bits': 0},
        2:  {
            'data_capacity': 44,
            'data_codewords': {'L': 34, 'M': 28, 'Q': 22, 'H': 16},
            'remainder_bits': 7},
        3:  {
            'data_capacity': 70,
            'data_codewords': {'L': 55, 'M': 44, 'Q': 34, 'H': 26},
            'remainder_bits': 7,
            },
        4:  {
            'data_capacity': 100,
            'data_codewords': {'L': 80, 'M': 64, 'Q': 48, 'H': 36},
            'remainder_bits': 7,
            },
        5:  {
            'data_capacity': 134,
            'data_codewords': {'L': 108, 'M': 86, 'Q': 62, 'H': 46},
            'remainder_bits': 7,
            },
        6:  {
            'data_capacity': 172,
            'data_codewords': {'L': 136, 'M': 108, 'Q': 76, 'H': 60},
            'remainder_bits': 7,
            },
        7:  {
            'data_capacity': 196,
            'data_codewords': {'L': 156, 'M': 124, 'Q': 88, 'H': 66},
            'remainder_bits': 0,
            },
        8:  {
            'data_capacity': 242,
            'data_codewords': {'L': 194, 'M': 154, 'Q': 110, 'H': 86},
            'remainder_bits': 0,
            },
        9:  {
            'data_capacity': 292,
            'data_codewords': {'L': 232, 'M': 182, 'Q': 132, 'H': 100},
            'remainder_bits': 0,
            },
        10: {
            'data_capacity': 346,
            'data_codewords': {'L': 274, 'M': 216, 'Q': 154, 'H': 122},
            'remainder_bits': 0,
            },
        11: {
            'data_capacity': 404,
            'data_codewords': {'L': 324, 'M': 254, 'Q': 180, 'H': 140},
            'remainder_bits': 0,
            },
        12: {
            'data_capacity': 466,
            'data_codewords': {'L': 370, 'M': 290, 'Q': 206, 'H': 158},
            'remainder_bits': 0,
            },
        13: {
            'data_capacity': 532,
            'data_codewords': {'L': 428, 'M': 334, 'Q': 244, 'H': 180},
            'remainder_bits': 0,
            },
        14: {
            'data_capacity': 581,
            'data_codewords': {'L': 461, 'M': 365, 'Q': 261, 'H': 197},
            'remainder_bits': 3,
            },
        15: {
            'data_capacity': 655,
            'data_codewords': {'L': 523, 'M': 415, 'Q': 295, 'H': 223},
            'remainder_bits': 3,
            },
        16: {
            'data_capacity': 733,
            'data_codewords': {'L': 589, 'M': 453, 'Q': 325, 'H': 253},
            'remainder_bits': 3,
            },
        17: {
            'data_capacity': 815,
            'data_codewords': {'L': 647, 'M': 507, 'Q': 367, 'H': 283},
            'remainder_bits': 3,
            },
        18: {
            'data_capacity': 901,
            'data_codewords': {'L': 721, 'M': 563, 'Q': 397, 'H': 313},
            'remainder_bits': 3,
            },
        19: {
            'data_capacity': 991,
            'data_codewords': {'L': 795, 'M': 627, 'Q': 445, 'H': 341},
            'remainder_bits': 3,
            },
        20: {
            'data_capacity': 1085,
            'data_codewords': {'L': 861, 'M': 669, 'Q': 485, 'H': 385},
            'remainder_bits': 3,
            },
        21: {
            'data_capacity': 1156,
            'data_codewords': {'L': 932, 'M': 714, 'Q': 512, 'H': 406},
            'remainder_bits': 4,
            },
        22: {
            'data_capacity': 1258,
            'data_codewords': {'L': 1006, 'M': 782, 'Q': 568, 'H': 442},
            'remainder_bits': 4,
            },
        23: {
            'data_capacity': 1364,
            'data_codewords': {'L': 1094, 'M': 860, 'Q': 614, 'H': 464},
            'remainder_bits': 4,
            },
        24: {
            'data_capacity': 1474,
            'data_codewords': {'L': 1174, 'M': 914, 'Q': 664, 'H': 514},
            'remainder_bits': 4,
            },
        25: {
            'data_capacity': 1588,
            'data_codewords': {'L': 1276, 'M': 1000, 'Q': 718, 'H': 538},
            'remainder_bits': 4,
            },
        26: {
            'data_capacity': 1706,
            'data_codewords': {'L': 1370, 'M': 1062, 'Q': 754, 'H': 596},
            'remainder_bits': 4,
            },
        27: {
            'data_capacity': 1828,
            'data_codewords': {'L': 1468, 'M': 1128, 'Q': 808, 'H': 628},
            'remainder_bits': 4,
            },
        28: {
            'data_capacity': 1921,
            'data_codewords': {'L': 1531, 'M': 1193, 'Q': 871, 'H': 661},
            'remainder_bits': 3,
            },
        29: {
            'data_capacity': 2051,
            'data_codewords': {'L': 1631, 'M': 1267, 'Q': 911, 'H': 701},
            'remainder_bits': 3,
            },
        30: {
            'data_capacity': 2185,
            'data_codewords': {'L': 1735, 'M': 1373, 'Q': 985, 'H': 745},
            'remainder_bits': 3,
            },
        31: {
            'data_capacity': 2323,
            'data_codewords': {'L': 1843, 'M': 1455, 'Q': 1033, 'H': 793},
            'remainder_bits': 3,
            },
        32: {
            'data_capacity': 2465,
            'data_codewords': {'L': 1955, 'M': 1541, 'Q': 1115, 'H': 845},
            'remainder_bits': 3,
            },
        33: {
            'data_capacity': 2611,
            'data_codewords': {'L': 2071, 'M': 1631, 'Q': 1171, 'H': 901},
            'remainder_bits': 3,
            },
        34: {
            'data_capacity': 2761,
            'data_codewords': {'L': 2191, 'M': 1725, 'Q': 1231, 'H': 961},
            'remainder_bits': 3,
            },
        35: {
            'data_capacity': 2876,
            'data_codewords': {'L': 2306, 'M': 1812, 'Q': 1286, 'H': 986},
            'remainder_bits': 0,
            },
        36: {
            'data_capacity': 3034,
            'data_codewords': {'L': 2434, 'M': 1914, 'Q': 1354, 'H': 1054},
            'remainder_bits': 0,
            },
        37: {
            'data_capacity': 3196,
            'data_codewords': {'L': 2566, 'M': 1992, 'Q': 1426, 'H': 1096},
            'remainder_bits': 0,
            },
        38: {
            'data_capacity': 3362,
            'data_codewords': {'L': 2702, 'M': 2102, 'Q': 1502, 'H': 1142},
            'remainder_bits': 0,
            },
        39: {
            'data_capacity': 3532,
            'data_codewords': {'L': 2812, 'M': 2216, 'Q': 1582, 'H': 1222},
            'remainder_bits': 0,
            },
        40: {
            'data_capacity': 3706,
            'data_codewords': {'L': 2956, 'M': 2334, 'Q': 1666, 'H': 1276},
            'remainder_bits': 0,
            }
        }

#: Dictionary associating error correction level to integer indexes
ecl_index = {'L': 0, 'M': 1, 'Q': 2, 'H': 3}

#: ISO/IEC 18004 - Table 7 (partial)
max_char_capacity = {
        'numeric': {
            1: [41, 34, 27, 17],
            2: [77, 63, 48, 34],
            3: [127, 101, 77, 58],
            4: [187, 149, 111, 82],
            5: [255, 202, 144, 106],
            6: [322, 255, 178, 139],
            7: [370, 293, 207, 154],
            8: [461, 365, 259, 202],
            9: [552, 432, 312, 235],
            10: [652, 513, 364, 288],
            11: [772, 604, 427, 331],
            12: [883, 691, 489, 374],
            13: [1022, 796, 580, 427],
            14: [1101, 871, 621, 468],
            15: [1250, 991, 703, 530],
            16: [1408, 1082, 775, 602],
            17: [1548, 1212, 876, 674],
            18: [1725, 1346, 948, 746],
            19: [1903, 1500, 1063, 813],
            20: [2061, 1600, 1159, 919],
            21: [2232, 1708, 1224, 969],
            22: [2409, 1872, 1358, 1056],
            23: [2620, 2059, 1468, 1108],
            24: [2812, 2188, 1588, 1228],
            25: [3057, 2395, 1718, 1286],
            26: [3283, 2544, 1804, 1425],
            27: [3517, 2701, 1933, 1501],
            28: [3669, 2857, 2085, 1581],
            29: [3909, 3035, 2181, 1677],
            30: [4158, 3289, 2358, 1782],
            31: [4417, 3486, 2473, 1897],
            32: [4686, 3693, 2670, 2022],
            33: [4965, 3909, 2805, 2157],
            34: [5253, 4134, 2949, 2301],
            35: [5529, 4343, 3081, 2361],
            36: [5836, 4588, 3244, 2524],
            37: [6153, 4775, 3417, 2625],
            38: [6479, 5039, 3599, 2735],
            39: [6743, 5313, 3791, 2927],
            40: [7089, 5596, 3993, 3057]
            },
        'alphanumeric': {
            1: [25, 20, 16, 10],
            2: [47, 30, 29, 20],
            3: [77, 61, 47, 35],
            4: [114, 90, 67, 50],
            5: [154, 122, 87, 64],
            6: [195, 154, 108, 84],
            7: [224, 178, 125, 93],
            8: [279, 221, 157, 122],
            9: [335, 262, 189, 143],
            10: [395, 311, 221, 174],
            11: [468, 366, 259, 200],
            12: [535, 419, 296, 227],
            13: [619, 483, 352, 259],
            14: [667, 528, 376, 283],
            15: [758, 600, 426, 321],
            16: [854, 656, 470, 365],
            17: [938, 734, 531, 408],
            18: [1046, 816, 574, 452],
            19: [1153, 909, 644, 493],
            20: [1249, 970, 702, 557],
            21: [1352, 1035, 742, 587],
            22: [1460, 1134, 823, 640],
            23: [1588, 1248, 890, 672],
            24: [1704, 1326, 963, 744],
            25: [1853, 1451, 1041, 779],
            26: [1990, 1542, 1094, 864],
            27: [2132, 1637, 1172, 910],
            28: [2223, 1732, 1263, 958],
            29: [2369, 1839, 1322, 1016],
            30: [2520, 1994, 1429, 1080],
            31: [2677, 2113, 1499, 1150],
            32: [2840, 2238, 1618, 1226],
            33: [3009, 2369, 1700, 1307],
            34: [3183, 2506, 1787, 1394],
            35: [3351, 2632, 1867, 1431],
            36: [3537, 2780, 1966, 1530],
            37: [3729, 2894, 2071, 1591],
            38: [3927, 3054, 2181, 1658],
            39: [4087, 3220, 2298, 1774],
            40: [4296, 3391, 2420, 1852]
            },
        }

#: ISO/IEC 18004 Table D.1
version_information_bit_string = {
        7: '000111110010010100',
        8: '001000010110111100',
        9: '001001101010011001',
        10: '001010010011010011',
        11: '001011101111110110',
        12: '001100011101100010',
        13: '001101100001000111',
        14: '001110011000001101',
        15: '001111100100101000',
        16: '010000101101111000',
        17: '010001010001011101',
        18: '010010101000010111',
        19: '010011010100110010',
        20: '010100100110100110',
        21: '010101011010000011',
        22: '010110100011001001',
        23: '010111011111101100',
        24: '011000111011000100',
        25: '011001000111100001',
        26: '011010111110101011',
        27: '011011000010001110',
        28: '011100110000011010',
        29: '011101001100111111',
        30: '011110110101110101',
        31: '011111001001010000',
        32: '100000100111010101',
        33: '100001011011110000',
        34: '100010100010111010',
        35: '100011011110011111',
        36: '100100101100001011',
        37: '100101010000101110',
        38: '100110101001100100',
        39: '100111010101000001',
        40: '101000110001101001'
}


#: ISO/IEC 18004 - Table 13-22 (partial)
blocks_per_ecl = {
        1: [[19],
            [16],
            [13],
            [9]],

        2: [[34],
            [28],
            [22],
            [16]],

        3: [[55],
            [44],
            [17, 17],
            [13, 13]],

        4: [[80],
            [32, 32],
            [24, 24],
            [9] * 4],

        5: [[108],
            [43, 43],
            [15, 15, 16, 16],
            [11, 11, 12, 12]],

        6: [[68, 68],
            [27] * 4,
            [19] * 4,
            [15] * 4],

        7: [[78, 78],
            [31] * 4,
            [14, 14] + [15] * 4,
            [13] * 4 + [14]],

        8: [[97, 97],
            [38, 38, 39, 39],
            [18] * 4 + [19, 19],
            [14] * 4 + [15, 15]],

        9: [[116, 116],
            [36] * 3 + [37, 37],
            [16] * 4 + [17] * 4,
            [12] * 4 + [13] * 4],

        10: [[68, 68, 69, 69],
            [43] * 4 + [44],
            [19] * 6 + [20, 20],
            [15] * 6 + [16, 16]],

        11: [[81] * 4,
            [50] + [51] * 4,
            [22] * 4 + [23] * 4,
            [12] * 3 + [13] * 8],

        12: [[92, 92, 93, 93],
            [36] * 6 + [37, 37],
            [20] * 4 + [21] * 6,
            [14] * 7 + [15] * 4],

        13: [[107] * 4,
            [37] * 8 + [38],
            [20] * 8 + [21] * 4,
            [11] * 12 + [12] * 4],

        14: [[115] * 3 + [116],
            [40] * 4 + [41] * 5,
            [16] * 11 + [17] * 5,
            [12] * 11 + [13] * 5],

        15: [[87] * 5 + [88],
            [41] * 5 + [42] * 5,
            [24] * 5 + [25] * 7,
            [12] * 11 + [13] * 7],

        16: [[98] * 5 + [99],
            [45] * 7 + [46] * 3,
            [19] * 15 + [20, 20],
            [15] * 3 + [16] * 13],

        17: [[107] + [108] * 5,
            [46] * 10 + [47],
            [22] + [23] * 15,
            [14] * 2 + [15] * 17],

        18: [[120] * 5 + [121],
            [43] * 9 + [44] * 4,
            [22] * 17 + [23],
            [14] * 2 + [15] * 19],

        19: [[113] * 3 + [114] * 4,
            [44] * 3 + [45] * 11,
            [21] * 17 + [22] * 4,
            [13] * 9 + [14] * 16],

        20: [[107] * 3 + [108] * 5,
            [41] * 3 + [42] * 13,
            [24] * 15 + [25] * 5,
            [15] * 15 + [16] * 10],

        21: [[116] * 4 + [117] * 4,
            [42] * 17,
            [22] * 17 + [23] * 6,
            [16] * 19 + [17] * 6],

        22: [[111] * 2 + [112] * 7,
            [46] * 17,
            [24] * 7 + [25] * 16,
            [13] * 34],

        23: [[121] * 4 + [122] * 5,
            [47] * 4 + [48] * 14,
            [24] * 11 + [25] * 14,
            [15] * 16 + [16] * 14],

        24: [[117] * 6 + [118] * 4,
            [45] * 6 + [46] * 14,
            [24] * 11 + [25] * 16,
            [16] * 30 + [17] * 2],

        25: [[106] * 8 + [107] * 4,
            [47] * 8 + [48] * 13,
            [24] * 7 + [25] * 22,
            [15] * 22 + [16] * 13],

        26: [[114] * 10 + [115] * 2,
            [46] * 19 + [47] * 4,
            [22] * 28 + [23] * 6,
            [16] * 33 + [17] * 4],

        27: [[122] * 8 + [123] * 4,
            [45] * 22 + [46] * 3,
            [23] * 8 + [24] * 26,
            [15] * 12 + [16] * 28],

        28: [[117] * 3 + [118] * 10,
            [45] * 3 + [46] * 23,
            [24] * 4 + [25] * 31,
            [15] * 11 + [16] * 31],

        29: [[116] * 7 + [117] * 7,
            [45] * 21 + [46] * 7,
            [23] + [24] * 37,
            [15] * 19 + [16] * 26],

        30: [[115] * 5 + [116] * 10,
            [47] * 19 + [48] * 10,
            [24] * 15 + [25] * 25,
            [15] * 23 + [16] * 25],

        31: [[115] * 13 + [116] * 3,
            [46] * 2 + [47] * 29,
            [24] * 42 + [25],
            [15] * 23 + [16] * 28],

        32: [[115] * 17,
            [46] * 10 + [47] * 23,
            [24] * 10 + [25] * 35,
            [15] * 19 + [16] * 35],

        33: [[115] * 17 + [116],
            [46] * 14 + [47] * 21,
            [24] * 29 + [25] * 19,
            [15] * 11 + [16] * 46],

        34: [[115] * 13 + [116] * 6,
            [46] * 14 + [47] * 23,
            [24] * 44 + [25] * 7,
            [16] * 59 + [17]],

        35: [[121] * 12 + [122] * 7,
            [47] * 12 + [48] * 26,
            [24] * 39 + [25] * 14,
            [15] * 22 + [16] * 41],

        36: [[121] * 6 + [122] * 14,
            [47] * 6 + [48] * 34,
            [24] * 46 + [25] * 10,
            [15] * 2 + [16] * 64],

        37: [[122] * 17 + [123] * 4,
            [46] * 29 + [47] * 14,
            [24] * 49 + [25] * 10,
            [15] * 24 + [16] * 46],

        38: [[122] * 4 + [123] * 18,
            [46] * 13 + [47] * 32,
            [24] * 48 + [25] * 14,
            [15] * 42 + [16] * 32],

        39: [[117] * 20 + [118] * 4,
            [47] * 40 + [48] * 7,
            [24] * 43 + [25] * 22,
            [15] * 10 + [16] * 67],

        40: [[118] * 19 + [119] * 6,
            [47] * 18 + [48] * 31,
            [24] * 34 + [25] * 34,
            [15] * 20 + [16] * 61]
        }


#: ISO/IEC 18004 Tables A.1-7
# The check character generation polynomial is used to divide the data
# codeword polynomial, where each codeword is the coefficient of the dividend
# polynomial in descending power order. The coefficients of the remainder of
# this division are the error correction codeword values.  
generator_polynomials = {
7: [0, 87, 229, 146, 149, 238, 102, 21],

10: [0, 251, 67, 46, 61, 118, 70, 64, 94, 32, 45],

13: [0, 74, 152, 176, 100, 86, 100, 106, 104, 130, 218, 206, 140, 78],

15: [0, 8, 183, 61, 91, 202, 37, 51, 58, 58, 237, 140, 124, 5, 99, 105],

16: [0, 120, 104, 107, 109, 102, 161, 76, 3, 91, 191, 147, 169, 182, 194, 225,
    120],

17: [0, 43, 139, 206, 78, 43, 239, 123, 206, 214, 147, 24, 99, 150, 39, 243,
    163, 136],

18: [0, 215, 234, 158, 94, 184, 97, 118, 170, 79, 187, 152, 148, 252, 179, 5,
    98, 96, 153],

20: [0, 17,  60, 79, 50, 61, 163, 26, 187, 202, 180, 221, 225, 83, 239, 156,
    164, 212, 212, 188, 190],

22: [0, 210, 171, 247, 242, 93, 230, 14, 109, 221, 53, 200, 74, 8, 172, 98,
    80, 219, 134, 160, 105, 165, 231],

24: [0, 229, 121, 135, 48, 211, 117, 251, 126, 159, 180, 169, 152, 192, 226,
    228, 218, 111, 0, 117, 232, 87, 96, 227, 21],

26: [0, 173, 125, 158, 2, 103, 182, 118, 17, 145, 201, 111, 28, 165, 53, 161,
    21, 245, 142, 13, 102, 48, 227, 153, 145, 218, 70],

28: [0, 168, 223, 200, 104, 224, 234, 108, 180, 110, 190, 195, 147, 205, 27,
    232, 201, 21, 43, 245, 87, 42, 195, 212, 119, 242, 37, 9, 123],

30: [0, 41, 173, 145, 152, 216, 31, 179, 182, 50, 48, 110, 86, 239, 96, 222,
    125, 42, 173, 226, 193, 224, 130, 156, 37,  251, 216, 238, 40, 192, 180],

32: [0, 10, 6,  106, 190, 249, 167, 4, 67, 209, 138, 138, 32, 242, 123, 89,
    27, 120, 185,  80,  156,  38,  69,  171, 60,  28,  222, 80, 52, 254, 185,
    220, 241],

34: [0, 111, 77, 146, 94, 26, 21, 108, 19, 105, 94, 113, 193, 86, 140, 163,
    125, 58, 158, 229, 239, 218, 103, 56, 70, 114, 61, 183, 129, 167, 13, 98,
    62, 129, 51],

36: [0, 200, 183, 98, 16, 172, 31, 246, 234, 60, 152, 115, 0, 167, 152, 113,
    248, 238, 107, 18, 63, 218, 37, 87, 210, 105, 177, 120, 74, 121, 196, 117,
    251, 113, 233, 30, 120],

40: [0, 59, 116, 79, 161, 252, 98, 128, 205, 128, 161, 247, 57, 163, 56, 235,
    106, 53, 26, 187, 174, 226, 104, 170, 7, 175, 35, 181, 114, 88, 41, 47,
    163, 125, 134, 72, 20, 232, 53, 35, 15],

42: [0, 250, 103, 221, 230, 25, 18, 137, 231, 0, 3, 58, 242, 221, 191, 110,
    84, 230, 8, 188, 106, 96, 147, 15, 131, 139, 34, 101, 223, 39, 101, 213,
    199, 237, 254, 201, 123, 171, 162, 194, 117, 50, 96],

44: [0, 190, 7, 61, 121, 71, 246, 69, 55, 168, 188, 89, 243, 191, 25, 72, 123,
    9, 145, 14, 247, 1, 238, 44, 78, 143, 62, 224, 126, 118, 114, 68, 163, 52,
    194, 217, 147, 204, 169, 37, 130, 113, 102, 73, 181],

46: [0, 112, 94, 88, 112, 253, 224, 202, 115, 187, 99, 89, 5, 54, 113, 129,
    44, 58, 16, 135, 216, 169, 211, 36, 1, 4, 96, 60, 241, 73, 104, 234, 8,
    249, 245, 119, 174, 52, 25, 157, 224, 43, 202, 223, 19, 82, 15],

48: [0, 228, 25, 196, 130, 211, 146 , 60, 24, 251, 90, 39, 102, 240, 61, 178,
    63, 46, 123, 115, 18, 221, 111, 135, 160, 182, 205, 107, 206, 95, 150,
    120, 184, 91, 21, 247, 156, 140, 238, 191, 11, 94, 227, 84, 50, 163,
    39, 34, 108],

50: [0, 232, 125, 157, 161, 164, 9, 118, 46, 209, 99, 203, 193, 35, 3, 209,
    111, 195, 242, 203, 225, 46, 13, 32, 160, 126, 209, 130, 160, 242,
    215, 242, 75, 77, 42, 189, 32, 113, 65, 124, 69, 228, 114, 235, 175,
    124, 170, 215, 232, 133, 205],

52: [0, 116, 50, 86, 186, 50, 220, 251, 89, 192, 46, 86, 127, 124, 19, 184,
    233, 151, 215, 22, 14, 59, 145, 37, 242, 203, 134, 254, 89, 190, 94,
    59, 65, 124, 113, 100, 233, 235, 121, 22, 76, 86, 97, 39, 242, 200,
    220, 101, 33, 239, 254, 116, 51],

54: [0, 183, 26, 201, 87, 210, 221, 113, 21, 46, 65, 45, 50, 238, 184, 249,
    225, 102, 58, 209, 218, 109, 165, 26, 95, 184, 192, 52, 245, 35, 254,
    238, 175, 172, 79, 123, 25, 122, 43, 120, 108, 215, 80, 128, 201, 235,
    8, 153, 59, 101, 31, 198, 76, 31, 156],

56: [0, 106, 120, 107, 157, 164, 216, 112, 116, 2, 91, 248, 163, 36, 201, 202,
    229, 6, 144, 254, 155, 135, 208, 170, 209, 12, 139, 127, 142, 182,
    249, 177, 174, 190, 28, 10, 85, 239, 184, 101, 124, 152, 206, 96, 23,
    163, 61, 27, 196, 247, 151, 154, 202, 207, 20, 61, 10],

58: [0, 82, 116, 26, 247, 66, 27, 62, 107, 252, 182, 200, 185, 235, 55, 251,
    242, 210, 144, 154, 237, 176, 141, 192, 248, 152, 249, 206, 85, 253,
    142, 65, 165, 125, 23, 24, 30, 122, 240, 214, 6, 129, 218, 29, 145,
    127, 134, 206, 245, 117, 29, 41, 63, 159, 142, 233, 125, 148, 123],

60: [0, 107, 140, 26, 12, 9, 141, 243, 197, 226, 197, 219, 45, 211, 101, 219,
    120, 28, 181, 127, 6, 100, 247, 2, 205, 198, 57, 115, 219, 101, 109,
    160, 82, 37, 38, 238, 49, 160, 209, 121, 86, 11, 124, 30, 181, 84, 25,
    194, 87, 65, 102, 190, 220, 70, 27, 209, 16, 89, 7, 33, 240],

62: [0, 65, 202, 113, 98, 71, 223, 248, 118, 214, 94, 0, 122, 37, 23, 2, 228,
    58, 121, 7, 105, 135, 78, 243, 118, 70, 76, 223, 89, 72, 50, 70, 111,
    194, 17, 212, 126, 181, 35, 221, 117, 235, 11, 229, 149, 147, 123,
    213, 40, 115, 6, 200, 100, 26, 246, 182, 218, 127, 215, 36, 186, 110,
    106],

64: [0, 45, 51, 175, 9, 7, 158, 159, 49, 68, 119, 92, 123, 177, 204, 187, 254,
    200, 78, 141, 149, 119, 26, 127, 53, 160, 93, 199, 212, 29, 24, 145,
    156, 208, 150, 218, 209, 4, 216, 91, 47, 184, 146, 47, 140, 195, 195,
    125, 242, 238, 63, 99, 108, 140, 230, 242, 31, 204, 11, 178, 243, 217,
    156, 213, 231],

66: [0, 5, 118, 222, 180, 136, 136, 162, 51, 46, 117, 13, 215, 81, 17, 139,
    247, 197, 171, 95, 173, 65, 137, 178, 68, 111, 95, 101, 41, 72, 214,
    169, 197, 95, 7, 44, 154, 77, 111, 236, 40, 121, 143, 63, 87, 80, 253,
    240, 126, 217, 77, 34, 232, 106, 50, 168, 82, 76, 146, 67, 106, 171,
    25, 132, 93, 45, 105]
}

